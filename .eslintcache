[{"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\index.js":"1","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\App.js":"2","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Navbar.js":"3","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Login.js":"4","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Home.js":"5","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Register.js":"6","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\FormField.js":"7","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\queries\\user.js":"8","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\util\\hooks.js":"9","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Notification.js":"10","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\RegistrationConfirmation.js":"11","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\AuthContext.js":"12","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\AuthRoute.js":"13","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\AddPhotobook.js":"14","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Slide.js":"15","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\SlideContext.js":"16","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\History.js":"17","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\FileUpload.js":"18","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\SlideText.js":"19","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\queries\\photobook.js":"20","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\CoverPage.js":"21","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\SingleFileUpload.js":"22","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\HistoryContext.js":"23","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\util\\util.js":"24","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Feed.js":"25","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\PhotobookInFeed.js":"26","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Photobook.js":"27","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\index.js":"28","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\App.js":"29","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\AuthContext.js":"30","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\HistoryContext.js":"31","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\SlideContext.js":"32","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Navbar.js":"33","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\History.js":"34","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Login.js":"35","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\AuthRoute.js":"36","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Home.js":"37","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\AddPhotobook.js":"38","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Register.js":"39","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\RegistrationConfirmation.js":"40","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Photobook.js":"41","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\FormField.js":"42","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Notification.js":"43","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Feed.js":"44","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Slide.js":"45","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\CoverPage.js":"46","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\queries\\user.js":"47","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\util\\hooks.js":"48","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\queries\\photobook.js":"49","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\util\\util.js":"50","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\PhotobookInFeed.js":"51","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\FileUpload.js":"52","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SlideText.js":"53","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SingleFileUpload.js":"54","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SlideInFeed.js":"55","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\config.js":"56","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Loading.js":"57","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\DeleteButton.js":"58","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Comment.js":"59"},{"size":223,"mtime":1610153246337,"results":"60","hashOfConfig":"61"},{"size":2404,"mtime":1610153221514,"results":"62","hashOfConfig":"61"},{"size":2673,"mtime":1609624664950,"results":"63","hashOfConfig":"61"},{"size":2191,"mtime":1609912359376,"results":"64","hashOfConfig":"61"},{"size":336,"mtime":1610051639259,"results":"65","hashOfConfig":"61"},{"size":2802,"mtime":1609543839738,"results":"66","hashOfConfig":"61"},{"size":1275,"mtime":1610322425304,"results":"67","hashOfConfig":"61"},{"size":1099,"mtime":1609542202732,"results":"68","hashOfConfig":"61"},{"size":618,"mtime":1609981121380,"results":"69","hashOfConfig":"61"},{"size":1966,"mtime":1609567261537,"results":"70","hashOfConfig":"61"},{"size":1270,"mtime":1609543791934,"results":"71","hashOfConfig":"61"},{"size":1551,"mtime":1609569782544,"results":"72","hashOfConfig":"61"},{"size":776,"mtime":1609623477166,"results":"73","hashOfConfig":"61"},{"size":5389,"mtime":1610245796283,"results":"74","hashOfConfig":"61"},{"size":2244,"mtime":1610240422752,"results":"75","hashOfConfig":"61"},{"size":1383,"mtime":1609625603499,"results":"76","hashOfConfig":"61"},{"size":117,"mtime":1609701039903,"results":"77","hashOfConfig":"61"},{"size":1696,"mtime":1609910643379,"results":"78","hashOfConfig":"61"},{"size":1280,"mtime":1609910924290,"results":"79","hashOfConfig":"61"},{"size":2396,"mtime":1610318230983,"results":"80","hashOfConfig":"61"},{"size":4435,"mtime":1610245974823,"results":"81","hashOfConfig":"61"},{"size":1551,"mtime":1609916752975,"results":"82","hashOfConfig":"61"},{"size":119,"mtime":1609978165310,"results":"83","hashOfConfig":"61"},{"size":435,"mtime":1609981407216,"results":"84","hashOfConfig":"61"},{"size":1202,"mtime":1610142026279,"results":"85","hashOfConfig":"61"},{"size":861,"mtime":1610142064434,"results":"86","hashOfConfig":"61"},{"size":9237,"mtime":1610322374745,"results":"87","hashOfConfig":"61"},{"size":223,"mtime":1610153246337,"results":"88","hashOfConfig":"89"},{"size":2460,"mtime":1611544667188,"results":"90","hashOfConfig":"89"},{"size":1551,"mtime":1611520299611,"results":"91","hashOfConfig":"89"},{"size":119,"mtime":1609978165310,"results":"92","hashOfConfig":"89"},{"size":1383,"mtime":1609625603499,"results":"93","hashOfConfig":"89"},{"size":2692,"mtime":1610841503404,"results":"94","hashOfConfig":"89"},{"size":117,"mtime":1609701039903,"results":"95","hashOfConfig":"89"},{"size":2434,"mtime":1611530830878,"results":"96","hashOfConfig":"89"},{"size":776,"mtime":1609623477166,"results":"97","hashOfConfig":"89"},{"size":536,"mtime":1610850616431,"results":"98","hashOfConfig":"89"},{"size":5483,"mtime":1610832866699,"results":"99","hashOfConfig":"89"},{"size":2802,"mtime":1609543839738,"results":"100","hashOfConfig":"89"},{"size":1270,"mtime":1609543791934,"results":"101","hashOfConfig":"89"},{"size":9742,"mtime":1611544781442,"results":"102","hashOfConfig":"89"},{"size":1239,"mtime":1610502448744,"results":"103","hashOfConfig":"89"},{"size":1966,"mtime":1609567261537,"results":"104","hashOfConfig":"89"},{"size":1356,"mtime":1611527008220,"results":"105","hashOfConfig":"89"},{"size":1533,"mtime":1610676839872,"results":"106","hashOfConfig":"89"},{"size":7601,"mtime":1611521702139,"results":"107","hashOfConfig":"89"},{"size":1099,"mtime":1609542202732,"results":"108","hashOfConfig":"89"},{"size":618,"mtime":1609981121380,"results":"109","hashOfConfig":"89"},{"size":3554,"mtime":1610953222730,"results":"110","hashOfConfig":"89"},{"size":435,"mtime":1609981407216,"results":"111","hashOfConfig":"89"},{"size":1999,"mtime":1611521779725,"results":"112","hashOfConfig":"89"},{"size":1688,"mtime":1610824021469,"results":"113","hashOfConfig":"89"},{"size":1378,"mtime":1610919063228,"results":"114","hashOfConfig":"89"},{"size":1398,"mtime":1610824548033,"results":"115","hashOfConfig":"89"},{"size":1536,"mtime":1611522690989,"results":"116","hashOfConfig":"89"},{"size":65,"mtime":1610824264892,"results":"117","hashOfConfig":"89"},{"size":615,"mtime":1610832542169,"results":"118","hashOfConfig":"89"},{"size":1880,"mtime":1611525050668,"results":"119","hashOfConfig":"89"},{"size":2537,"mtime":1610953320348,"results":"120","hashOfConfig":"89"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},"18mb02f",{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"123"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"123"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"123"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"123"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"123"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"123"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"123"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"123"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"123"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"123"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"6k2r82",{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"189"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"189"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"189"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"189"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"189"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"189"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"189"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"189"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"189"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"189"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"189"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"189"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"189"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"189"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\index.js",[],["263","264"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\App.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Login.js",["265","266"],"import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport FormField from '../components/FormField';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_LOGIN_USER } from '../queries/user';\r\nimport { useForm } from '../util/hooks';\r\nimport Notification from '../components/Notification';\r\nimport './login.css';\r\n\r\n\r\nconst Login = (props) => {\r\n    const context = useContext(AuthContext);\r\n    const { onChange, onSubmit, values, clearValues } = useForm(loginUserGlobal, {\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [notifyColor, setNotifyColor] = useState('');\r\n    const [notifyText, setNotifyText] = useState([]);\r\n\r\n\r\n    const [loginUser, { loading }] = useMutation(M_LOGIN_USER, {\r\n        update(_, { data: { login: userData } }) { //gets triggered after successful mutation \r\n            context.login(userData);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            const errors = err.graphQLErrors[0].extensions.exception.errors;\r\n            values['password'] = '';\r\n            setNotifyColor('#FF2525');\r\n            setNotifyText(Object.values(errors));\r\n            setSpawnNotify(true);\r\n        },\r\n        variables: values\r\n    });\r\n    function loginUserGlobal() {\r\n        loginUser();\r\n    }\r\n    return (\r\n        <>\r\n            <div className='login-div'>\r\n                <form onSubmit={onSubmit}>\r\n                    <FormField inputName='Email' inputType='text'\r\n                        inputKey='email' onInputChange={onChange} values={values} />\r\n                    <FormField inputName='Password' inputType='password'\r\n                        inputKey='password' onInputChange={onChange} values={values} />\r\n                    <button>\r\n                        <span>Log In</span>\r\n                    </button>\r\n                </form>\r\n            </div >\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={notifyText} setSpawnNotify={setSpawnNotify} divColor={notifyColor} />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Home.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Register.js",["267"],"import React, { useState } from 'react';\r\nimport FormField from '../components/FormField';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_REGISTER_USER } from '../queries/user';\r\nimport { useForm } from '../util/hooks';\r\nimport Notification from '../components/Notification';\r\n\r\n\r\nimport './register.css';\r\n\r\nconst Register = (props) => {\r\n    const { onChange, onSubmit, values, clearValues } = useForm(registerUserGlobal, {\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [notifyColor, setNotifyColor] = useState('');\r\n    const [notifyText, setNotifyText] = useState([]);\r\n    const [onClose, setOnClose] = useState(false);\r\n\r\n    function registerUserGlobal() {\r\n        registerUser();\r\n    }\r\n\r\n\r\n    const [registerUser, { loading }] = useMutation(M_REGISTER_USER, {\r\n        update(_, result) { //gets triggered after successful mutation \r\n            console.log(result);\r\n            setNotifyColor('#2BFF7B');\r\n            setNotifyText(['Confirmation link sent to your email id!']);\r\n            setSpawnNotify(true);\r\n            setOnClose('/');\r\n            clearValues();\r\n\r\n        },\r\n        onError(err) {\r\n            const errors = err.graphQLErrors[0].extensions.exception.errors;\r\n            setNotifyColor('#FF2525');\r\n            setNotifyText(Object.values(errors));\r\n            setSpawnNotify(true);\r\n        },\r\n        variables: values\r\n    });\r\n    return (\r\n        <>\r\n            <div className='register-div'>\r\n                <form onSubmit={onSubmit}>\r\n                    <FormField inputName='Username' inputType='text'\r\n                        inputKey='username' onInputChange={onChange}\r\n                        values={values} />\r\n                    <FormField inputName='Email' inputType='text'\r\n                        inputKey='email' onInputChange={onChange}\r\n                        values={values} />\r\n                    <FormField inputName='Password' inputType='password'\r\n                        inputKey='password' onInputChange={onChange}\r\n                        values={values} />\r\n                    <FormField inputName='Confirm Password' inputType='password'\r\n                        inputKey='confirmPassword' onInputChange={onChange}\r\n                        values={values} />\r\n                    <button>\r\n                        <span>Sign Up</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={notifyText} setSpawnNotify={setSpawnNotify}\r\n                    onClose={onClose} divColor={notifyColor} />\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Register; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\FormField.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\queries\\user.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\util\\hooks.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Notification.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\RegistrationConfirmation.js",["268","269"],"import React, { useState, useEffect } from 'react';\r\nimport Notification from '../components/Notification';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_CONFIRM_USER } from '../queries/user';\r\n\r\n\r\n\r\nconst RegistrationConfirmation = (props) => {\r\n    const [notifyText, setNotifyText] = useState(false);\r\n    const [notifyColor, setNotifyColor] = useState('');\r\n    const [onClose, setOnClose] = useState('');\r\n\r\n    const token = props.match.params.token;\r\n\r\n    const [confirmUser, { loading }] = useMutation(M_CONFIRM_USER, {\r\n        update(_, { data: { confirm } }) {\r\n            console.log(confirm);\r\n            setNotifyText([confirm]);\r\n            setOnClose('/login');\r\n            setNotifyColor('#2BFF7B');\r\n\r\n        },\r\n        onError(err) {\r\n            setNotifyText([err.graphQLErrors[0].message]);\r\n            setOnClose('/register');\r\n            setNotifyColor('#FF2525');\r\n\r\n        },\r\n        variables: {\r\n            token\r\n        }\r\n    });\r\n    useEffect(() => {\r\n        confirmUser();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {notifyText.length > 0 && <Notification texts={notifyText} divColor={notifyColor} onClose={onClose} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegistrationConfirmation;\r\n\r\n\r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\AuthRoute.js",["270"],"import React, { Component, useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nconst AuthRoute = ({ component: Component, inverse, ...rest }) => {\r\n    const { user } = useContext(AuthContext);\r\n    if (inverse) {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props =>\r\n                    user ? <Component {...props} /> : <Redirect to='/login' />\r\n                } />\r\n        );\r\n    } else {\r\n        return (\r\n            <Route\r\n                {...rest}\r\n                render={props =>\r\n                    user ? <Redirect to='/' /> : <Component {...props} />\r\n                } />\r\n        );\r\n    }\r\n};\r\n\r\nexport default AuthRoute; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\AddPhotobook.js",["271","272","273"],"import React, { useState } from 'react';\r\nimport Slide from '../components/Slide';\r\nimport CoverPage from '../components/CoverPage';\r\nimport Notification from '../components/Notification';\r\nimport { checkForNullEntries } from '../util/util';\r\nimport './addphotobook.css';\r\n\r\n\r\n\r\n\r\nconst AddPhotobook = () => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [openCoverPage, setOpenCoverPage] = useState(false);\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [photobookId, setPhotobookId] = useState('');\r\n    const [slides, setSlides] = useState([\r\n        {\r\n            img_data: '',\r\n            text_data: ''\r\n        }\r\n    ]);\r\n    function addPhotobookGlobal() {\r\n        // addPhotobook();\r\n        checkForNullEntries(slides);\r\n        if (slides.length === 1 && slides[0].img_data === '') {\r\n            setSpawnNotify(true);\r\n            setCurrentIndex(0);\r\n        } else {\r\n            setOpenCoverPage(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const resetPhotobook = () => {\r\n        setOpenCoverPage(false);\r\n        setSlides([\r\n            {\r\n                img_data: '',\r\n                text_data: ''\r\n            }\r\n        ]); //reset slides \r\n        setCurrentIndex(0);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        if (currentIndex == 0) {\r\n            setCurrentIndex(slides.length - 1);\r\n        } else {\r\n            setCurrentIndex(c => c - 1);\r\n        }\r\n    };\r\n    const nextSlide = () => {\r\n        setCurrentIndex(c => (c + 1) % slides.length);\r\n    };\r\n    const deleteSlide = () => {\r\n        if (slides.length > 1) {\r\n            setSlides(slides.filter((s, index) => index != currentIndex));\r\n            if (slides.length > 0) {\r\n                // setCurrentIndex(c => (c + 1) % (slides.length - 1));\r\n                setCurrentIndex(c => slides.length - 2);\r\n            }\r\n        }\r\n    };\r\n    const addSlide = () => {\r\n        setSlides(s => [...s, { img_data: '', text_data: '' }]);\r\n        // setCurrentIndex(c => (c + 1) % (slides.length + 1));\r\n        setCurrentIndex(c => slides.length);\r\n    };\r\n    const addSlideText = (index, new_text_data) => {\r\n        setSlides(s_l => s_l.map((s, i) => i === index ? {\r\n            img_data: s.img_data, text_data: new_text_data\r\n        } : s));\r\n    };\r\n    const addImg = (slideIndex, imgIndex, new_img_data) => {\r\n        let index = slideIndex + imgIndex;\r\n\r\n        if (index < slides.length) {\r\n            setSlides(s_l => s_l.map((s, i) => i === index ? { img_data: new_img_data, text_data: s.text_data } : s));\r\n        } else {\r\n            setSlides(s => [...s, { img_data: new_img_data, text_data: '' }]);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className='add-photobook-container'>\r\n                <div className='slides-container'>\r\n                    {\r\n                        slides.map((slide, i) => (\r\n                            <Slide\r\n                                key={i}\r\n                                img_data={slide.img_data}\r\n                                addImg={addImg}\r\n                                slideIndex={i}\r\n                                offset={i - currentIndex}\r\n                                text_data={slide.text_data}\r\n                                addSlideText={addSlideText}\r\n                                adding={true}\r\n                                len={slides.length}>\r\n                            </Slide>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <button\r\n                    style={{\r\n                        position: 'absolute',\r\n                        left: '-50px',\r\n                        top: '50%',\r\n                        transform: 'translateY(-50%)'\r\n                    }}\r\n                    className='add-photobook-button' onClick={() => prevSlide()}>\r\n                    <span>&lt;</span>\r\n                </button>\r\n                <button\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: '-50px',\r\n                        top: '50%',\r\n                        transform: 'translateY(-50%)'\r\n                    }}\r\n                    className='add-photobook-button' onClick={() => nextSlide()}>\r\n                    <span>&#62;</span>\r\n                </button>\r\n                <div className='mutation-buttons'>\r\n                    <button className='add-photobook-button' onClick={() => deleteSlide()}>\r\n                        <span>-</span>\r\n                    </button>\r\n                    <button className='add-photobook-button' onClick={() => addSlide()}>\r\n                        <span>+</span>\r\n                    </button>\r\n                    <button className='add-photobook-button' onClick={() => addPhotobookGlobal()}>\r\n                        <span>&#x2713;</span>\r\n                    </button>\r\n                </div>\r\n                {openCoverPage && <CoverPage photobookId={photobookId}\r\n                    reset={resetPhotobook} slides={slides} setOpenCoverPage={setOpenCoverPage} />}\r\n                {/* <CoverPage /> */}\r\n            </div >\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={['No images were provided']} setSpawnNotify={setSpawnNotify} divColor={'#FF2525'} />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddPhotobook; \r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Slide.js",["274","275","276"],"import React from 'react';\r\nimport SlideText from './SlideText';\r\nimport FileUpload from './FileUpload';\r\nimport noImageSrc from '../icons/noImage.png';\r\n\r\n\r\nconst Slide = ({ slideIndex, img_data, offset, len, addImg, text_data, addSlideText, adding }) => {\r\n    const slideOpacity = Math.abs(offset) == 1 ? 0.5 : 0;\r\n    return (\r\n        <div\r\n            className={offset === 0 ? 'active-slide-div' : 'slide-div'}\r\n            style={{\r\n                '--offset': offset,\r\n                '--slideOpacity': slideOpacity\r\n            }}\r\n        >\r\n\r\n            {img_data !== '' ?\r\n                <img src={img_data} />\r\n\r\n                :\r\n                <img className='no-image'\r\n                    style={{ width: '100px', height: '100px' }}\r\n                    src={noImageSrc} />\r\n            }\r\n\r\n\r\n\r\n            {\r\n                (offset === 0 && adding) && (\r\n                    <>\r\n                        <div className='upload-div'>\r\n                            <FileUpload\r\n                                slideIndex={slideIndex}\r\n                                addImg={addImg}\r\n                                multiple={true}\r\n                            />\r\n                        </div>\r\n                        <SlideText\r\n                            addSlideText={addSlideText}\r\n                            slideText={text_data}\r\n                            slideIndex={slideIndex} />\r\n                    </>\r\n                )\r\n\r\n            }\r\n            {\r\n                (offset === 0 && !adding) && (\r\n                    <>\r\n                        <div className='text-data-overlay'>\r\n                            <div className='cover-text'>\r\n                                <p>{text_data}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className='current-slide-background' style={{\r\n                            backgroundImage: `url('${img_data}')`,\r\n                            backgroundSize: 'cover',\r\n                            backgroundPosition: 'center center'\r\n                        }}>\r\n\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Slide; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\SlideContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\History.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\FileUpload.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\SlideText.js",["277","278","279","280"],"import React, { useState, useRef } from 'react';\r\nimport editTextSrc from '../icons/editIcon.png';\r\n\r\nconst SlideText = ({ slideIndex, slideText, addSlideText }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const [textVal, setTextVal] = useState(slideText);\r\n\r\n    return (\r\n        <div className='image-text-div'>\r\n\r\n\r\n            <input\r\n                style={{\r\n                    width: isEditing ? '300px' : '0px'\r\n                }}\r\n                value={slideText ? slideText : ''}\r\n                onChange={(e) => addSlideText(slideIndex, e.target.value)}\r\n                ref={inputRef}\r\n                type='text' autoComplete='off'\r\n                className='image-text-input' />\r\n\r\n            <a onClick={() => {\r\n                if (inputRef.current != null) {\r\n                    if (inputRef.current.value.trim() !== '') {\r\n                        setIsEditing(true);\r\n                    } else {\r\n                        setIsEditing(!isEditing);\r\n                    }\r\n                } else {\r\n                    setIsEditing(!isEditing);\r\n                }\r\n            }}>\r\n                <img src={editTextSrc} />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideText;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\queries\\photobook.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\CoverPage.js",["281","282","283","284","285"],"import React, { useState, useRef } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_CREATE_PHOTOBOOK, Q_GET_PHOTOBOOKS } from '../queries/photobook';\r\nimport SingleFileUpload from './SingleFileUpload';\r\nimport Notification from './Notification';\r\nimport editTextSrc from '../icons/editIcon.png';\r\nimport noImageSrc from '../icons/noImage.png';\r\nimport './coverpage.css';\r\n\r\nconst CoverPage = ({ photobookId, reset, slides, setOpenCoverPage }) => {\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [coverPageText, setCoverPageText] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [coverPageImg, setCoverPageImg] = useState('');\r\n    const [errText, setErrText] = useState([]);\r\n    const [addCoverPage] = useMutation(M_CREATE_PHOTOBOOK, {\r\n        update(proxy, result) { //gets triggered after successful mutation \r\n            console.log(result);\r\n            const data = proxy.readQuery({\r\n                query: Q_GET_PHOTOBOOKS\r\n            }); //this query will access the inmemory cache on the client\r\n            console.log(data);\r\n            proxy.writeQuery({\r\n                query: Q_GET_PHOTOBOOKS,\r\n                data: {\r\n                    getPhotobooks: [result.data.createPhotobook, ...data.getPhotobooks],\r\n                },\r\n            });\r\n            setCoverPageText('');\r\n            setCoverPageImg('');\r\n            setIsEditing(false);\r\n            reset();\r\n            // window.location.reload();\r\n        },\r\n        onError(err) {\r\n            setErrText([err.message]);\r\n            setSpawnNotify(true);\r\n            setCoverPageText('');\r\n        },\r\n        variables: {\r\n            photobookInput: slides,\r\n            cover_text: coverPageText,\r\n            cover_image: coverPageImg,\r\n            photobookId: photobookId\r\n        }\r\n    });\r\n    const getCoverImg = (slideIndex, imgIndex, result) => {\r\n        setCoverPageImg(result);\r\n    };\r\n    const getCoverText = (slideIndex, newCoverText) => {\r\n        console.log(newCoverText);\r\n    };\r\n    const submitCoverPageData = () => {\r\n        addCoverPage();\r\n    };\r\n    return (\r\n        <div className='cover-page-div'>\r\n            <button className='add-photobook-button' style={{\r\n                position: 'absolute',\r\n                right: '0px',\r\n                top: '0px'\r\n            }} onClick={() => setOpenCoverPage(false)}>\r\n                <span>X</span>\r\n            </button>\r\n            <div className='image-text-div'>\r\n                <input\r\n                    style={{\r\n                        width: isEditing ? '300px' : '0px'\r\n                    }}\r\n                    value={coverPageText}\r\n                    onChange={(e) => setCoverPageText(e.target.value)}\r\n                    onKeyDown={(e) => e.key === 'Enter' ? submitCoverPageData() : null}\r\n                    ref={inputRef}\r\n                    type='text' autoComplete='off'\r\n                    className='image-text-input' />\r\n\r\n                <a onClick={() => {\r\n                    if (inputRef.current != null) {\r\n                        if (inputRef.current.value.trim() !== '') {\r\n                            addCoverPage();\r\n\r\n                        } else {\r\n                            setIsEditing(!isEditing);\r\n                        }\r\n                    } else {\r\n                        setIsEditing(!isEditing);\r\n                    }\r\n                }}>\r\n                    <img src={editTextSrc} />\r\n                </a>\r\n            </div>\r\n\r\n            {coverPageImg !== '' ?\r\n                <img src={coverPageImg} style={{\r\n                    zIndex: '-1',\r\n                    objectFit: 'contain',\r\n                    width: '300px',\r\n                    height: '300px'\r\n                }} />\r\n\r\n                :\r\n                <img className='no-image'\r\n                    style={{\r\n                        width: '100px',\r\n                        height: '100px',\r\n                        zIndex: '-1'\r\n                    }}\r\n                    src={noImageSrc} />\r\n            }\r\n\r\n            <SingleFileUpload\r\n                addImg={getCoverImg} />\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={errText} setSpawnNotify={setSpawnNotify} divColor={'#FF2525'} />\r\n            }\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default CoverPage;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\SingleFileUpload.js",["286"],"import React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport './fileUpload.css';\r\n\r\nconst acceptedFileTypes = [\r\n    'image/x-png', 'image/png', 'image/jpg', 'image/jpeg', 'image/gif'\r\n];\r\n\r\nconst FileUpload = ({ slideIndex, addImg }) => {\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        maxSize: 40000000000000000000000000,\r\n        maxFiles: 50,\r\n        multiple: false,\r\n        onDrop: (acceptedFiles) => {\r\n            if (acceptedFiles && acceptedFiles.length > 0) {\r\n                for (let i = 0; i < acceptedFiles.length; i++) {\r\n                    let file = acceptedFiles[i];\r\n                    if (acceptedFileTypes.includes(file.type)) {\r\n                        const reader = new FileReader();\r\n                        reader.addEventListener('load', () => {\r\n                            // console.log(reader.result);\r\n                            addImg(slideIndex, i, reader.result);\r\n                        }, false);\r\n\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n        onDragEnter: () => {\r\n\r\n        }\r\n\r\n    });\r\n    return (\r\n        <div\r\n            className='file-uploading' {...getRootProps()} style={{\r\n                outline: 'none',\r\n                border: '2px dashed white'\r\n            }}>\r\n            <input {...getInputProps()} />\r\n            <p>Drop a cover page image here..</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\contexts\\HistoryContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\util\\util.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\Feed.js",["287","288"],"import React, { useEffect } from 'react';\r\nimport { useQuery, useLazyQuery } from '@apollo/client';\r\nimport { Q_GET_PHOTOBOOKS } from '../queries/photobook';\r\nimport PhotobookInFeed from '../components/PhotobookInFeed';\r\n\r\nimport './feed.css';\r\n\r\n\r\n\r\nconst Feed = () => {\r\n    // const { loading, data } = useQuery(Q_GET_PHOTOBOOKS);\r\n    const [getFeed, { data }] = useLazyQuery(Q_GET_PHOTOBOOKS);\r\n    useEffect(() => {\r\n        getFeed();\r\n    }, []);\r\n    // if (!loading) {\r\n    //     const photobooks = data.getPhotobooks;\r\n    // }\r\n    // if (loading) {\r\n    //     return <div>Loading...</div>\r\n    // } else {\r\n    //     const photobooks = data.getPhotobooks;\r\n    //     console.log(photobooks);\r\n    //     return;\r\n    // }\r\n    return (\r\n        <div className='feed'>\r\n            {\r\n                data &&\r\n                data.getPhotobooks.map(({ user: { username }, cover_image, cover_text, id, created_at }) => (\r\n                    <PhotobookInFeed key={id} username={username} id={id}\r\n                        cover_image={cover_image} cover_text={cover_text} created_at={created_at} />\r\n                ))\r\n\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\components\\PhotobookInFeed.js",["289","290","291"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport dateFormat from 'dateformat';\r\n\r\n\r\nconst PhotobookInFeed = ({ id, username, cover_image, cover_text, created_at }) => {\r\n\r\n    return (\r\n        <div className='photobook-in-feed'>\r\n            <Link to={`/photobook/${id}`}>\r\n                <div className='overlay-for-data'>\r\n                    <div className='cover-text'>\r\n                        <p>{cover_text}</p>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n            <div className='user-data'>\r\n                <p>{username}</p>\r\n                <span></span>\r\n            </div>\r\n            <div className='cover-image-in-feed'>\r\n                <img src={cover_image}></img>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PhotobookInFeed;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project\\client\\src\\pages\\Photobook.js",["292","293","294","295","296","297"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\index.js",[],["298","299"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\App.js",["300"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\HistoryContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\contexts\\SlideContext.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Navbar.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\History.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Login.js",["301","302"],"import React, { useState, useContext, useRef } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport FormField from '../components/FormField';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_LOGIN_USER } from '../queries/user';\r\nimport { useForm } from '../util/hooks';\r\nimport Notification from '../components/Notification';\r\nimport './login.css';\r\n\r\n\r\nconst Login = (props) => {\r\n    const context = useContext(AuthContext);\r\n    const emailInputRef = useRef(null);\r\n    const passwordInputRef = useRef(null);\r\n    const { onChange, onSubmit, values, clearValues } = useForm(loginUserGlobal, {\r\n        email: '',\r\n        password: ''\r\n    });\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [notifyColor, setNotifyColor] = useState('');\r\n    const [notifyText, setNotifyText] = useState([]);\r\n\r\n\r\n    const [loginUser, { loading }] = useMutation(M_LOGIN_USER, {\r\n        update(_, { data: { login: userData } }) { //gets triggered after successful mutation \r\n            context.login(userData);\r\n            props.history.push('/');\r\n        },\r\n        onError(err) {\r\n            const errors = err.graphQLErrors[0].extensions.exception.errors;\r\n            values['password'] = '';\r\n            passwordInputRef.current.focus();\r\n            setNotifyColor('#FF2525');\r\n            setNotifyText(Object.values(errors));\r\n            setSpawnNotify(true);\r\n        },\r\n        variables: values\r\n    });\r\n    function loginUserGlobal() {\r\n        loginUser();\r\n    }\r\n    return (\r\n        <>\r\n            <div className='login-div'>\r\n                <form onSubmit={onSubmit}>\r\n                    <FormField inputName='Email' inputType='text'\r\n                        inputRef={emailInputRef}\r\n                        inputKey='email' onInputChange={onChange} values={values} />\r\n                    <FormField inputName='Password' inputType='password'\r\n                        inputRef={passwordInputRef}\r\n                        inputKey='password' onInputChange={onChange} values={values} />\r\n                    <button>\r\n                        <span>Log In</span>\r\n                    </button>\r\n                </form>\r\n            </div >\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={notifyText} setSpawnNotify={setSpawnNotify} divColor={notifyColor} />\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Login; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\AuthRoute.js",["303"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Home.js",["304"],"import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport Feed from '../components/Feed';\r\nimport './home.css';\r\n\r\n\r\nconst Home = () => {\r\n    const { user } = useContext(AuthContext);\r\n    return (\r\n        <div>\r\n            {user && <div className='feed-parent'>\r\n                {/* <div className='feed-types'>\r\n\r\n                </div> */}\r\n                <Feed />\r\n            </div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\AddPhotobook.js",["305","306","307"],"import React, { useState } from 'react';\r\nimport Slide from '../components/Slide';\r\nimport CoverPage from '../components/CoverPage';\r\nimport Notification from '../components/Notification';\r\nimport { checkForNullEntries } from '../util/util';\r\nimport './addphotobook.css';\r\n\r\n\r\n\r\n\r\nconst AddPhotobook = () => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [openCoverPage, setOpenCoverPage] = useState(false);\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [photobookId, setPhotobookId] = useState('');\r\n    const [slides, setSlides] = useState([\r\n        {\r\n            img_file: null,\r\n            img_data: '',\r\n            text_data: ''\r\n        }\r\n    ]);\r\n    function addPhotobookGlobal() {\r\n        // addPhotobook();\r\n        checkForNullEntries(slides);\r\n        if (slides.length === 1 && slides[0].img_data === '') {\r\n            setSpawnNotify(true);\r\n            setCurrentIndex(0);\r\n        } else {\r\n\r\n            setOpenCoverPage(true);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    const resetPhotobook = () => {\r\n        setOpenCoverPage(false);\r\n        setSlides([\r\n            {\r\n                img_data: '',\r\n                text_data: '',\r\n                img_file: null\r\n            }\r\n        ]); //reset slides \r\n        setCurrentIndex(0);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n        if (currentIndex == 0) {\r\n            setCurrentIndex(slides.length - 1);\r\n        } else {\r\n            setCurrentIndex(c => c - 1);\r\n        }\r\n    };\r\n    const nextSlide = () => {\r\n        setCurrentIndex(c => (c + 1) % slides.length);\r\n    };\r\n    const deleteSlide = () => {\r\n        if (slides.length > 1) {\r\n            setSlides(slides.filter((s, index) => index != currentIndex));\r\n            if (slides.length > 0) {\r\n\r\n                setCurrentIndex(c => slides.length - 2);\r\n            }\r\n        }\r\n    };\r\n    const addSlide = () => {\r\n        setSlides(s => [...s, { img_data: '', text_data: '', img_file: null }]);\r\n\r\n        setCurrentIndex(c => slides.length);\r\n    };\r\n    const addSlideText = (index, new_text_data) => {\r\n        setSlides(s_l => s_l.map((s, i) => i === index ? {\r\n            img_data: s.img_data, text_data: new_text_data, img_file: s.img_file\r\n        } : s));\r\n    };\r\n    const addImg = (slideIndex, imgIndex, new_img_data, new_img_file) => {\r\n        let index = slideIndex + imgIndex;\r\n        if (index < slides.length) {\r\n            setSlides(s_l => s_l.map((s, i) => i === index ? {\r\n                img_data: new_img_data,\r\n                text_data: s.text_data,\r\n                img_file: new_img_file\r\n            } : s));\r\n        } else {\r\n            setSlides(s => [...s, { img_data: new_img_data, text_data: '', img_file: new_img_file }]);\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n            <div className='add-photobook-container'>\r\n                <div className='slides-container'>\r\n                    {\r\n                        slides.map((slide, i) => (\r\n                            <Slide\r\n                                key={i}\r\n                                img_data={slide.img_data}\r\n                                addImg={addImg}\r\n                                slideIndex={i}\r\n                                offset={i - currentIndex}\r\n                                text_data={slide.text_data}\r\n                                addSlideText={addSlideText}\r\n                                adding={true}\r\n                                len={slides.length}>\r\n                            </Slide>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <button\r\n                    style={{\r\n                        position: 'absolute',\r\n                        left: '-50px',\r\n                        top: '50%',\r\n                        transform: 'translateY(-50%)'\r\n                    }}\r\n                    className='add-photobook-button' onClick={() => prevSlide()}>\r\n                    <span>&lt;</span>\r\n                </button>\r\n                <button\r\n                    style={{\r\n                        position: 'absolute',\r\n                        right: '-50px',\r\n                        top: '50%',\r\n                        transform: 'translateY(-50%)'\r\n                    }}\r\n                    className='add-photobook-button' onClick={() => nextSlide()}>\r\n                    <span>&#62;</span>\r\n                </button>\r\n                <div className='mutation-buttons'>\r\n                    <button className='add-photobook-button' onClick={() => deleteSlide()}>\r\n                        <span>-</span>\r\n                    </button>\r\n                    <button className='add-photobook-button' onClick={() => addSlide()}>\r\n                        <span>+</span>\r\n                    </button>\r\n                    <button className='add-photobook-button' onClick={() => addPhotobookGlobal()}>\r\n                        <span>&#x2713;</span>\r\n                    </button>\r\n                </div>\r\n                {openCoverPage && <CoverPage photobookId={photobookId}\r\n                    reset={resetPhotobook} slides={slides} setOpenCoverPage={setOpenCoverPage} />}\r\n                {/* <CoverPage /> */}\r\n            </div >\r\n            {\r\n                spawnNotify &&\r\n                <Notification texts={['No images were provided']} setSpawnNotify={setSpawnNotify} divColor={'#FF2525'} />\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddPhotobook; \r\n","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Register.js",["308"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\RegistrationConfirmation.js",["309","310"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\pages\\Photobook.js",["311","312","313","314","315"],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\FormField.js",["316"],"import React, { useState, useRef } from 'react';\r\n\r\nconst FormField = ({ inputName, inputType, inputKey, onInputChange, values, inputRef }) => {\r\n    const [activeInput, setActiveInput] = useState(false);\r\n\r\n    return (\r\n        <div className='form-field'>\r\n            <input\r\n                ref={inputRef}\r\n                type={inputType}\r\n                name={inputKey}\r\n                value={values[inputKey]}\r\n                autoComplete='off'\r\n                onFocus={() => setActiveInput(true)}\r\n                onBlur={(e) => {\r\n                    e.target.value.trim() === '' ? setActiveInput(false) : setActiveInput(true)\r\n                }}\r\n                onChange={onInputChange}\r\n            ></input>\r\n            <label style={{\r\n                borderBottom: activeInput ? '2px dashed #2BFF7B' : '3px dashed white'\r\n            }}>\r\n                <span style={{\r\n                    transform: activeInput ? 'translateY(-250%)' : 'translateY(0px)',\r\n                    color: activeInput ? '#2BFF7B' : 'white',\r\n                    fontSize: activeInput ? '1rem' : '1.6rem'\r\n                }}\r\n                >{inputName}</span>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormField;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Notification.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Feed.js",["317","318"],"import React, { useEffect } from 'react';\r\nimport { useQuery, useLazyQuery } from '@apollo/client';\r\nimport { Q_GET_PHOTOBOOKS } from '../queries/photobook';\r\nimport PhotobookInFeed from '../components/PhotobookInFeed';\r\nimport Loading from '../components/Loading';\r\nimport './feed.css';\r\n\r\n\r\n\r\nconst Feed = () => {\r\n    const { loading, data } = useQuery(Q_GET_PHOTOBOOKS);\r\n    // const [getFeed, { data }] = useLazyQuery(Q_GET_PHOTOBOOKS);\r\n    // useEffect(() => {\r\n    //     getFeed();\r\n    // }, []);\r\n    // useEffect(() => {\r\n    //     if (data) {\r\n    //         //console.log(data);\r\n    //     }\r\n    // }, [data])\r\n    return (\r\n        <div className='feed'>\r\n            {\r\n                loading ?\r\n                    <Loading></Loading> :\r\n                    data.getPhotobooks.map(({ user: { username }, cover_image_id, cover_text, id, created_at, likesCount, commentsCount }) => (\r\n                        <PhotobookInFeed key={id} username={username} id={id}\r\n                            cover_image_id={cover_image_id}\r\n                            cover_text={cover_text}\r\n                            created_at={created_at}\r\n                            likesCount={likesCount}\r\n                            commentsCount={commentsCount} />\r\n                    ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Feed; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Slide.js",["319","320","321"],"import React from 'react';\r\nimport SlideText from './SlideText';\r\nimport FileUpload from './FileUpload';\r\nimport noImageSrc from '../icons/noImage.png';\r\n\r\n\r\nconst Slide = ({ slideIndex, img_data, offset, len, addImg, text_data, addSlideText, adding }) => {\r\n    const slideOpacity = Math.abs(offset) == 1 ? 0.5 : 0;\r\n    return (\r\n        <div\r\n            className={offset === 0 ? 'active-slide-div' : 'slide-div'}\r\n            style={{\r\n                '--offset': offset,\r\n                '--slideOpacity': slideOpacity\r\n            }}\r\n        >\r\n\r\n            {img_data !== '' ?\r\n                <img src={img_data} />\r\n\r\n                :\r\n                <img className='no-image'\r\n                    style={{ width: '100px', height: '100px' }}\r\n                    src={noImageSrc} />\r\n            }\r\n\r\n\r\n\r\n            {\r\n                (offset === 0 && adding) && (\r\n                    <>\r\n                        <div className='upload-div'>\r\n                            <FileUpload\r\n                                slideIndex={slideIndex}\r\n                                addImg={addImg}\r\n                                multiple={true}\r\n                            />\r\n                        </div>\r\n                        <SlideText\r\n                            addSlideText={addSlideText}\r\n                            slideText={text_data}\r\n                            slideIndex={slideIndex} />\r\n                    </>\r\n                )\r\n\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default Slide; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\CoverPage.js",["322","323","324","325","326","327"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_CREATE_PHOTOBOOK, Q_GET_PHOTOBOOKS } from '../queries/photobook';\r\nimport SingleFileUpload from './SingleFileUpload';\r\nimport Notification from './Notification';\r\nimport editTextSrc from '../icons/editIcon.png';\r\nimport noImageSrc from '../icons/noImage.png';\r\nimport { REACT_APP_API_KEY } from '../config';\r\nimport Loading from '../components/Loading';\r\nimport './coverpage.css';\r\n\r\n\r\n\r\nconst CoverPage = ({ photobookId, reset, slides, setOpenCoverPage }) => {\r\n    const [spawnNotify, setSpawnNotify] = useState(false);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [notifyColor, setNotifyColor] = useState('');\r\n    const [coverPageText, setCoverPageText] = useState('');\r\n    const inputRef = useRef(null);\r\n    const [photobookData, setPhotobookData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [onClose, setOnClose] = useState(null);\r\n    const [coverPageImg, setCoverPageImg] = useState({\r\n        img_data: '',\r\n        img_file: '',\r\n        img_id: ''\r\n    });\r\n    const [errText, setErrText] = useState([]);\r\n    useEffect(() => {\r\n        if (photobookData.length > 0) {\r\n            addPhotobookGlobal();\r\n        }\r\n    }, [photobookData])\r\n    const [addPhotobook] = useMutation(M_CREATE_PHOTOBOOK, {\r\n        update(proxy, result) { //gets triggered after successful mutation \r\n            setErrText(['Photobook Added successfully']);\r\n            setNotifyColor('#2BFF7B');\r\n            setSpawnNotify(true);\r\n            setOnClose('/')\r\n            setLoading(false);\r\n            setCoverPageText('');\r\n            setCoverPageImg({\r\n                img_file: '',\r\n                img_data: '',\r\n                img_id: ''\r\n            });\r\n            const data = proxy.readQuery({\r\n                query: Q_GET_PHOTOBOOKS\r\n            }); //this query will access the inmemory cache on the client\r\n            if (data) {\r\n                proxy.writeQuery({\r\n                    query: Q_GET_PHOTOBOOKS,\r\n                    data: {\r\n                        getPhotobooks: [result.data.createPhotobook, ...data.getPhotobooks],\r\n                    },\r\n                });\r\n            } else {\r\n                proxy.writeQuery({\r\n                    query: Q_GET_PHOTOBOOKS,\r\n                    data: {\r\n                        getPhotobooks: [result.data.createPhotobook],\r\n                    },\r\n                });\r\n            }\r\n        },\r\n        onError(err) {\r\n            setNotifyColor('#FF2525');\r\n            setErrText([err.message]);\r\n            setSpawnNotify(true);\r\n            setCoverPageText('');\r\n        },\r\n        variables: {\r\n            photobookInput: photobookData,\r\n            cover_text: coverPageText,\r\n            cover_image_id: coverPageImg.img_id\r\n        }\r\n    });\r\n    const getCoverImg = (result, img_file) => {\r\n        setCoverPageImg({\r\n            ...coverPageImg,\r\n            img_data: result,\r\n            img_file: img_file\r\n        });\r\n    };\r\n    function addPhotobookGlobal() {\r\n        // console.log('#############');\r\n        // console.log(photobookData);\r\n        // console.log(coverPageText);\r\n        // console.log(coverPageImg);\r\n        addPhotobook();\r\n        //reset();\r\n\r\n    }\r\n    const uploadPhotobook = async () => {\r\n        setLoading(true);\r\n        slides.push({\r\n            cover_text: coverPageText,\r\n            cover_image_id: coverPageImg.img_file\r\n        });\r\n\r\n        setIsEditing(false);\r\n        console.log(slides);\r\n        const uploads = slides.map((slide, index) => {\r\n            const formData = new FormData();\r\n            if (index !== slides.length - 1) {\r\n                formData.append('file', slide.img_file);\r\n            } else {\r\n                formData.append('file', slide.cover_image_id);\r\n            }\r\n            formData.append('upload_preset', process.env.REACT_APP_UPLOAD_PRESET);\r\n            //formData.append('api_key', REACT_APP_API_KEY);\r\n            formData.append('api_key', process.env.REACT_APP_API_KEY);\r\n            return axios.post(`https://api.cloudinary.com/v1_1/${process.env.REACT_APP_CLOUD_NAME}/image/upload`,\r\n                formData\r\n            ).then(response => {\r\n                const data = response.data;\r\n                //console.log(data.public_id);\r\n                if (index === slides.length - 1) {\r\n                    setCoverPageImg({\r\n                        img_data: '',\r\n                        img_file: '',\r\n                        img_id: data.public_id\r\n                    });\r\n                    setCoverPageText(slide.cover_text);\r\n                    return { cover_text: slide.cover_text, cover_image_id: data.public_id };\r\n                }\r\n                return { text_data: slide.text_data, img_id: data.public_id };\r\n            });\r\n        });\r\n        axios.all(uploads).then((data) => {\r\n            setPhotobookData(data.filter((d, i) => i !== data.length - 1));\r\n        });\r\n    };\r\n    return (\r\n        <div className='cover-page-div'>\r\n            {loading && <Loading />}\r\n            <button className='add-photobook-button' style={{\r\n                position: 'absolute',\r\n                right: '0px',\r\n                top: '0px'\r\n            }} onClick={() => setOpenCoverPage(false)}>\r\n                <span>X</span>\r\n            </button>\r\n            <div className='image-text-div'>\r\n                <input\r\n                    style={{\r\n                        width: isEditing ? '300px' : '0px'\r\n                    }}\r\n                    value={coverPageText}\r\n                    onChange={(e) => setCoverPageText(e.target.value)}\r\n                    onKeyDown={(e) => (e.key === 'Enter' &&\r\n                        inputRef.current.value.trim() !== '') ?\r\n                        uploadPhotobook() : null}\r\n                    ref={inputRef}\r\n                    type='text' autoComplete='off'\r\n                    className='image-text-input' />\r\n\r\n                <a onClick={() => {\r\n                    if (inputRef.current != null) {\r\n                        if (inputRef.current.value.trim() !== '') {\r\n                            uploadPhotobook();\r\n\r\n                        } else {\r\n                            setIsEditing(!isEditing);\r\n                        }\r\n                    } else {\r\n                        setIsEditing(!isEditing);\r\n                    }\r\n                }}>\r\n                    <img src={editTextSrc} />\r\n                </a>\r\n            </div>\r\n\r\n            {coverPageImg.img_data !== '' ?\r\n                <img src={coverPageImg.img_data} style={{\r\n                    zIndex: '-1',\r\n                    objectFit: 'contain',\r\n                    width: '300px',\r\n                    height: '300px'\r\n                }} />\r\n\r\n                :\r\n                <img className='no-image'\r\n                    style={{\r\n                        width: '100px',\r\n                        height: '100px',\r\n                        zIndex: '-1'\r\n                    }}\r\n                    src={noImageSrc} />\r\n            }\r\n\r\n            <SingleFileUpload\r\n                addImg={getCoverImg} />\r\n            {\r\n                spawnNotify &&\r\n                <Notification\r\n                    texts={errText}\r\n                    setSpawnNotify={setSpawnNotify}\r\n                    onClose={onClose}\r\n                    divColor={notifyColor} />\r\n            }\r\n\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default CoverPage;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\queries\\user.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\util\\hooks.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\queries\\photobook.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\util\\util.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\PhotobookInFeed.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\FileUpload.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SlideText.js",["328","329","330","331"],"import React, { useState, useRef } from 'react';\r\nimport editTextSrc from '../icons/editIcon.png';\r\n\r\nconst SlideText = ({ slideIndex, slideText, addSlideText }) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const [textVal, setTextVal] = useState(slideText);\r\n\r\n    return (\r\n        <div className='image-text-div'>\r\n\r\n\r\n            <input\r\n                style={{\r\n                    width: isEditing ? '300px' : '0px'\r\n                }}\r\n                value={slideText ? slideText : ''}\r\n                onChange={(e) => addSlideText(slideIndex, e.target.value)}\r\n                ref={inputRef}\r\n                type='text' autoComplete='off'\r\n                className='image-text-input' />\r\n\r\n            <a onClick={() => {\r\n                if (inputRef.current != null) {\r\n                    if (inputRef.current.value.trim() !== '') {\r\n                        setIsEditing(true);\r\n                    } else {\r\n                        setIsEditing(!isEditing);\r\n                        inputRef.current.focus();\r\n                    }\r\n                } else {\r\n                    setIsEditing(!isEditing);\r\n                    inputRef.current.focus();\r\n                }\r\n            }}>\r\n                <img src={editTextSrc} />\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SlideText;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SingleFileUpload.js",["332"],"import React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport './fileUpload.css';\r\n\r\nconst acceptedFileTypes = [\r\n    'image/x-png', 'image/png', 'image/jpg', 'image/jpeg', 'image/gif'\r\n];\r\n\r\nconst SingleFileUpload = ({ addImg }) => {\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        accept: 'image/*',\r\n        maxSize: 40000000000000000000000000,\r\n        multiple: false,\r\n        onDrop: (acceptedFiles) => {\r\n            if (acceptedFiles && acceptedFiles.length > 0) {\r\n                const file = acceptedFiles[0];\r\n                if (acceptedFileTypes.includes(file.type)) {\r\n                    const reader = new FileReader();\r\n                    reader.addEventListener('load', () => {\r\n                        // console.log(reader.result);\r\n                        addImg(reader.result, file);\r\n                    }, false);\r\n                    reader.readAsDataURL(file);\r\n                }\r\n            }\r\n\r\n        },\r\n        onDragEnter: () => {\r\n\r\n        }\r\n\r\n    });\r\n    return (\r\n        <div\r\n            className='file-uploading' {...getRootProps()} style={{\r\n                outline: 'none',\r\n                border: '2px dashed white'\r\n            }}>\r\n            <input {...getInputProps()} />\r\n            <p>Drop a cover page image here..</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleFileUpload;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\SlideInFeed.js",["333","334"],"import React from 'react';\r\nimport { Image } from 'cloudinary-react';\r\nimport noImageSrc from '../icons/noImage.png';\r\n\r\n\r\nconst SlideInFeed = ({ img_id, offset, text_data }) => {\r\n    const slideOpacity = Math.abs(offset) == 1 ? 0.5 : 0;\r\n    return (\r\n        <div\r\n            className={offset === 0 ? 'active-slide-div' : 'slide-div'}\r\n            style={{\r\n                '--offset': offset,\r\n                '--slideOpacity': slideOpacity\r\n            }}\r\n        >\r\n\r\n            {img_id !== '' ?\r\n                <Image cloudName={process.env.REACT_APP_CLOUD_NAME} publicId={img_id} />\r\n\r\n                :\r\n                <img className='no-image'\r\n                    style={{ width: '100px', height: '100px' }}\r\n                    src={noImageSrc} />\r\n            }\r\n\r\n            {\r\n                (offset === 0 &&\r\n                    <>\r\n                        {text_data.trim() !== '' &&\r\n                            < div className='text-data-overlay'>\r\n                                <div className='cover-text'>\r\n                                    <p>{text_data}</p>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                        <div className='current-slide-background'>\r\n                            {img_id !== '' && <Image cloudName={process.env.REACT_APP_CLOUD_NAME} publicId={img_id} />}\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </div >\r\n\r\n    );\r\n}\r\n\r\nexport default SlideInFeed;","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\config.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Loading.js",[],"C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\DeleteButton.js",["335","336"],"import React, { useState, useContext } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport { M_DELETE_PHOTOBOOK, Q_GET_PHOTOBOOKS, M_DELETE_COMMENT } from '../queries/photobook';\r\nimport './deleteButton.css';\r\n\r\nconst DeleteButton = (props) => {\r\n    const { photobookId, setLoading, buttonStyle, divStyle, goThere, commentId } = props;\r\n    const [deletePhotobook] = useMutation(commentId ? M_DELETE_COMMENT : M_DELETE_PHOTOBOOK, {\r\n        update(proxy, result) {\r\n            if (commentId === undefined) {\r\n                const deletedPhotobookId = result.data.deletePhotobook.id;\r\n                const data = proxy.readQuery({\r\n                    query: Q_GET_PHOTOBOOKS\r\n                }); //this query will access the inmemory cache on the client\r\n                const newData = data.getPhotobooks.filter(d => d.id !== deletedPhotobookId);\r\n                proxy.writeQuery({\r\n                    query: Q_GET_PHOTOBOOKS,\r\n                    data: {\r\n                        getPhotobooks: newData,\r\n                    },\r\n                });\r\n                setLoading(false);\r\n                if (goThere) {\r\n                    goThere();\r\n                }\r\n            }\r\n        },\r\n        onError(err) {\r\n            //console.log(err);\r\n        },\r\n        variables: {\r\n            photobookId,\r\n            commentId\r\n        }\r\n    });\r\n    function deletePhotobookGlobal() {\r\n        if (!commentId) {\r\n            setLoading(true);\r\n        }\r\n        deletePhotobook();\r\n    }\r\n    return (\r\n        <div style={divStyle}>\r\n            <button\r\n                onClick={deletePhotobookGlobal}\r\n                className='delete-button'\r\n                style={buttonStyle}\r\n            >\r\n                <span>X</span>\r\n            </button>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DeleteButton; ","C:\\Users\\Makarand\\Desktop\\Projects\\ReactProjects\\photobook_project-cloudinary\\client\\src\\components\\Comment.js",[],{"ruleId":"337","replacedBy":"338"},{"ruleId":"339","replacedBy":"340"},{"ruleId":"341","severity":1,"message":"342","line":13,"column":41,"nodeType":"343","messageId":"344","endLine":13,"endColumn":52},{"ruleId":"341","severity":1,"message":"345","line":22,"column":25,"nodeType":"343","messageId":"344","endLine":22,"endColumn":32},{"ruleId":"341","severity":1,"message":"345","line":28,"column":28,"nodeType":"343","messageId":"344","endLine":28,"endColumn":35},{"ruleId":"341","severity":1,"message":"345","line":15,"column":27,"nodeType":"343","messageId":"344","endLine":15,"endColumn":34},{"ruleId":"346","severity":1,"message":"347","line":35,"column":8,"nodeType":"348","endLine":35,"endColumn":10,"suggestions":"349"},{"ruleId":"341","severity":1,"message":"350","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":26},{"ruleId":"341","severity":1,"message":"351","line":15,"column":25,"nodeType":"343","messageId":"344","endLine":15,"endColumn":39},{"ruleId":"352","severity":1,"message":"353","line":48,"column":26,"nodeType":"354","messageId":"355","endLine":48,"endColumn":28},{"ruleId":"352","severity":1,"message":"356","line":59,"column":57,"nodeType":"354","messageId":"355","endLine":59,"endColumn":59},{"ruleId":"352","severity":1,"message":"353","line":8,"column":43,"nodeType":"354","messageId":"355","endLine":8,"endColumn":45},{"ruleId":"357","severity":1,"message":"358","line":19,"column":17,"nodeType":"359","endLine":19,"endColumn":39},{"ruleId":"357","severity":1,"message":"358","line":22,"column":17,"nodeType":"359","endLine":24,"endColumn":40},{"ruleId":"341","severity":1,"message":"360","line":7,"column":12,"nodeType":"343","messageId":"344","endLine":7,"endColumn":19},{"ruleId":"341","severity":1,"message":"361","line":7,"column":21,"nodeType":"343","messageId":"344","endLine":7,"endColumn":31},{"ruleId":"362","severity":1,"message":"363","line":23,"column":13,"nodeType":"359","endLine":33,"endColumn":16},{"ruleId":"357","severity":1,"message":"358","line":34,"column":17,"nodeType":"359","endLine":34,"endColumn":42},{"ruleId":"341","severity":1,"message":"364","line":51,"column":11,"nodeType":"343","messageId":"344","endLine":51,"endColumn":23},{"ruleId":"362","severity":1,"message":"363","line":78,"column":17,"nodeType":"359","endLine":89,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":90,"column":21,"nodeType":"359","endLine":90,"endColumn":46},{"ruleId":"357","severity":1,"message":"358","line":95,"column":17,"nodeType":"359","endLine":100,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":103,"column":17,"nodeType":"359","endLine":109,"endColumn":40},{"ruleId":"341","severity":1,"message":"365","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"366","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":18},{"ruleId":"346","severity":1,"message":"367","line":15,"column":8,"nodeType":"348","endLine":15,"endColumn":10,"suggestions":"368"},{"ruleId":"341","severity":1,"message":"369","line":3,"column":8,"nodeType":"343","messageId":"344","endLine":3,"endColumn":14},{"ruleId":"341","severity":1,"message":"370","line":4,"column":8,"nodeType":"343","messageId":"344","endLine":4,"endColumn":18},{"ruleId":"357","severity":1,"message":"358","line":23,"column":17,"nodeType":"359","endLine":23,"endColumn":40},{"ruleId":"341","severity":1,"message":"371","line":6,"column":8,"nodeType":"343","messageId":"344","endLine":6,"endColumn":17},{"ruleId":"341","severity":1,"message":"372","line":16,"column":13,"nodeType":"343","messageId":"344","endLine":16,"endColumn":21},{"ruleId":"341","severity":1,"message":"373","line":16,"column":33,"nodeType":"343","messageId":"344","endLine":16,"endColumn":39},{"ruleId":"352","severity":1,"message":"353","line":72,"column":26,"nodeType":"354","messageId":"355","endLine":72,"endColumn":28},{"ruleId":"341","severity":1,"message":"374","line":86,"column":45,"nodeType":"343","messageId":"344","endLine":86,"endColumn":55},{"ruleId":"341","severity":1,"message":"375","line":86,"column":57,"nodeType":"343","messageId":"344","endLine":86,"endColumn":70},{"ruleId":"337","replacedBy":"376"},{"ruleId":"339","replacedBy":"377"},{"ruleId":"341","severity":1,"message":"378","line":19,"column":10,"nodeType":"343","messageId":"344","endLine":19,"endColumn":27},{"ruleId":"341","severity":1,"message":"342","line":15,"column":41,"nodeType":"343","messageId":"344","endLine":15,"endColumn":52},{"ruleId":"341","severity":1,"message":"345","line":24,"column":25,"nodeType":"343","messageId":"344","endLine":24,"endColumn":32},{"ruleId":"341","severity":1,"message":"350","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":26},{"ruleId":"341","severity":1,"message":"379","line":2,"column":10,"nodeType":"343","messageId":"344","endLine":2,"endColumn":14},{"ruleId":"341","severity":1,"message":"351","line":15,"column":25,"nodeType":"343","messageId":"344","endLine":15,"endColumn":39},{"ruleId":"352","severity":1,"message":"353","line":51,"column":26,"nodeType":"354","messageId":"355","endLine":51,"endColumn":28},{"ruleId":"352","severity":1,"message":"356","line":62,"column":57,"nodeType":"354","messageId":"355","endLine":62,"endColumn":59},{"ruleId":"341","severity":1,"message":"345","line":28,"column":28,"nodeType":"343","messageId":"344","endLine":28,"endColumn":35},{"ruleId":"341","severity":1,"message":"345","line":15,"column":27,"nodeType":"343","messageId":"344","endLine":15,"endColumn":34},{"ruleId":"346","severity":1,"message":"347","line":35,"column":8,"nodeType":"348","endLine":35,"endColumn":10,"suggestions":"380"},{"ruleId":"341","severity":1,"message":"373","line":18,"column":23,"nodeType":"343","messageId":"344","endLine":18,"endColumn":29},{"ruleId":"341","severity":1,"message":"342","line":18,"column":31,"nodeType":"343","messageId":"344","endLine":18,"endColumn":42},{"ruleId":"352","severity":1,"message":"353","line":73,"column":26,"nodeType":"354","messageId":"355","endLine":73,"endColumn":28},{"ruleId":"341","severity":1,"message":"374","line":89,"column":49,"nodeType":"343","messageId":"344","endLine":89,"endColumn":59},{"ruleId":"341","severity":1,"message":"375","line":89,"column":61,"nodeType":"343","messageId":"344","endLine":89,"endColumn":74},{"ruleId":"341","severity":1,"message":"381","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":33},{"ruleId":"341","severity":1,"message":"382","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":26},{"ruleId":"341","severity":1,"message":"383","line":2,"column":20,"nodeType":"343","messageId":"344","endLine":2,"endColumn":32},{"ruleId":"352","severity":1,"message":"353","line":8,"column":43,"nodeType":"354","messageId":"355","endLine":8,"endColumn":45},{"ruleId":"357","severity":1,"message":"358","line":19,"column":17,"nodeType":"359","endLine":19,"endColumn":39},{"ruleId":"357","severity":1,"message":"358","line":22,"column":17,"nodeType":"359","endLine":24,"endColumn":40},{"ruleId":"341","severity":1,"message":"378","line":9,"column":10,"nodeType":"343","messageId":"344","endLine":9,"endColumn":27},{"ruleId":"346","severity":1,"message":"384","line":34,"column":8,"nodeType":"348","endLine":34,"endColumn":23,"suggestions":"385"},{"ruleId":"362","severity":1,"message":"363","line":159,"column":17,"nodeType":"359","endLine":170,"endColumn":20},{"ruleId":"357","severity":1,"message":"358","line":171,"column":21,"nodeType":"359","endLine":171,"endColumn":46},{"ruleId":"357","severity":1,"message":"358","line":176,"column":17,"nodeType":"359","endLine":181,"endColumn":22},{"ruleId":"357","severity":1,"message":"358","line":184,"column":17,"nodeType":"359","endLine":190,"endColumn":40},{"ruleId":"341","severity":1,"message":"360","line":7,"column":12,"nodeType":"343","messageId":"344","endLine":7,"endColumn":19},{"ruleId":"341","severity":1,"message":"361","line":7,"column":21,"nodeType":"343","messageId":"344","endLine":7,"endColumn":31},{"ruleId":"362","severity":1,"message":"363","line":23,"column":13,"nodeType":"359","endLine":35,"endColumn":16},{"ruleId":"357","severity":1,"message":"358","line":36,"column":17,"nodeType":"359","endLine":36,"endColumn":42},{"ruleId":"341","severity":1,"message":"365","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"352","severity":1,"message":"353","line":7,"column":43,"nodeType":"354","messageId":"355","endLine":7,"endColumn":45},{"ruleId":"357","severity":1,"message":"358","line":21,"column":17,"nodeType":"359","endLine":23,"endColumn":40},{"ruleId":"341","severity":1,"message":"365","line":1,"column":17,"nodeType":"343","messageId":"344","endLine":1,"endColumn":25},{"ruleId":"341","severity":1,"message":"386","line":1,"column":27,"nodeType":"343","messageId":"344","endLine":1,"endColumn":37},"no-native-reassign",["387"],"no-negated-in-lhs",["388"],"no-unused-vars","'clearValues' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'confirmUser'. Either include it or remove the dependency array.","ArrayExpression",["389"],"'Component' is defined but never used.","'setPhotobookId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'textVal' is assigned a value but never used.","'setTextVal' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getCoverText' is assigned a value but never used.","'useState' is defined but never used.","'useQuery' is defined but never used.","React Hook useEffect has a missing dependency: 'getFeed'. Either include it or remove the dependency array.",["390"],"'moment' is defined but never used.","'dateFormat' is defined but never used.","'FormField' is defined but never used.","'onChange' is assigned a value but never used.","'values' is assigned a value but never used.","'likesCount' is assigned a value but never used.","'commentsCount' is assigned a value but never used.",["387"],["388"],"'REACT_APP_API_KEY' is defined but never used.","'Link' is defined but never used.",["391"],"'useRef' is defined but never used.","'useEffect' is defined but never used.","'useLazyQuery' is defined but never used.","React Hook useEffect has a missing dependency: 'addPhotobookGlobal'. Either include it or remove the dependency array.",["392"],"'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"393","fix":"397"},{"desc":"398","fix":"399"},"Update the dependencies array to be: [confirmUser]",{"range":"400","text":"401"},"Update the dependencies array to be: [getFeed]",{"range":"402","text":"403"},{"range":"404","text":"401"},"Update the dependencies array to be: [addPhotobookGlobal, photobookData]",{"range":"405","text":"406"},[1041,1043],"[confirmUser]",[450,452],"[getFeed]",[1041,1043],[1341,1356],"[addPhotobookGlobal, photobookData]"]